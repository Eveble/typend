(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{138:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return p})),a.d(t,"default",(function(){return o}));var n=a(2),r=a(9),c=(a(0),a(290)),b={id:"classconverter",title:"ClassConverter",sidebar_label:"ClassConverter"},l={id:"api/classes/classconverter",title:"ClassConverter",description:"Hierarchy",source:"@site/docs/api/classes/classconverter.md",permalink:"/typend/docs/api/classes/classconverter",sidebar_label:"ClassConverter",sidebar:"api",previous:{title:"Class",permalink:"/typend/docs/api/classes/class"},next:{title:"ClassDescriber",permalink:"/typend/docs/api/classes/classdescriber"}},p=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Implements",id:"implements",children:[]},{value:"Index",id:"index",children:[{value:"Constructors",id:"constructors",children:[]},{value:"Properties",id:"properties",children:[]},{value:"Methods",id:"methods",children:[]}]},{value:"Constructors",id:"constructors-1",children:[{value:"constructor",id:"constructor",children:[]}]},{value:"Properties",id:"properties-1",children:[{value:"transformers",id:"transformers",children:[]}]},{value:"Methods",id:"methods-1",children:[{value:"convert",id:"convert",children:[]},{value:"isConvertible",id:"isconvertible",children:[]},{value:"reflect",id:"reflect",children:[]}]}],s={rightToc:p};function o(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("strong",{parentName:"li"},"ClassConverter"))),Object(c.b)("h2",{id:"implements"},"Implements"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/interfaces/types.typeconverter"}),"TypeConverter")),Object(c.b)("li",{parentName:"ul"},"TypeConverter")),Object(c.b)("h2",{id:"index"},"Index"),Object(c.b)("h3",{id:"constructors"},"Constructors"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/classconverter#constructor"}),"constructor"))),Object(c.b)("h3",{id:"properties"},"Properties"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/classconverter#transformers"}),"transformers"))),Object(c.b)("h3",{id:"methods"},"Methods"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/classconverter#convert"}),"convert")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/classconverter#isconvertible"}),"isConvertible")),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/classconverter#reflect"}),"reflect"))),Object(c.b)("h2",{id:"constructors-1"},"Constructors"),Object(c.b)("h3",{id:"constructor"},"constructor"),Object(c.b)("p",null,"+"," ",Object(c.b)("strong",{parentName:"p"},"new ClassConverter"),"(",Object(c.b)("inlineCode",{parentName:"p"},"transformers?"),": Map\u2039string, ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/typend/docs/api/interfaces/types.typetransformer"}),"TypeTransformer"),"\u203a): ",Object(c.b)("em",{parentName:"p"},Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/classes/classconverter"}),"ClassConverter"))),Object(c.b)("p",null,"Creates an instance of ClassConverter.\nCreates an instance of ClassConverter."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Parameters:")),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"transformers?")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Map\u2039string, ",Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/typend/docs/api/interfaces/types.typetransformer"}),"TypeTransformer"),"\u203a"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Optional transformer mappings implementing ",Object(c.b)("inlineCode",{parentName:"td"},"TypeTransformer")," interface.")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," ",Object(c.b)("em",{parentName:"p"},Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/classes/classconverter"}),"ClassConverter"))),Object(c.b)("h2",{id:"properties-1"},"Properties"),Object(c.b)("h3",{id:"transformers"},"transformers"),Object(c.b)("p",null,"\u2022 ",Object(c.b)("strong",{parentName:"p"},"transformers"),": ",Object(c.b)("em",{parentName:"p"},"Map\u2039string, TypeTransformer\u203a")),Object(c.b)("h2",{id:"methods-1"},"Methods"),Object(c.b)("h3",{id:"convert"},"convert"),Object(c.b)("p",null,"\u25b8 ",Object(c.b)("strong",{parentName:"p"},"convert"),"(",Object(c.b)("inlineCode",{parentName:"p"},"reflectedType"),": ObjectType\u2039\u203a | TupleType\u2039\u203a | ClassType\u2039\u203a | ReferenceType\u2039\u203a | UnionType\u2039\u203a | StringLiteralType\u2039\u203a | FunctionType\u2039\u203a | NumberLiteralType\u2039\u203a | BaseType\u2039String, string\u203a | BaseType\u2039Number, number\u203a | BaseType\u2039Boolean, boolean\u203a | BaseType\u2039Null, null\u203a | BaseType\u2039Undefined, undefined\u203a | BaseType\u2039ESSymbol, Symbol\u203a | BaseType\u2039Void, void\u203a | BaseType\u2039Never, never\u203a | BaseType\u2039Any, any\u203a | BaseType\u2039FalseLiteral, false\u203a | BaseType\u2039TrueLiteral, true\u203a | BaseType\u2039Unknown, unknown\u203a | BaseType\u2039Unknown2, unknown\u203a | ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/typend/docs/api/modules/types#class"}),"Class"),", ",Object(c.b)("inlineCode",{parentName:"p"},"converter"),": ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/typend/docs/api/interfaces/types.converter"}),"Converter"),"): ",Object(c.b)("em",{parentName:"p"},Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/classes/class"}),"Class")," | any")),Object(c.b)("p",null,"Converts class."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Parameters:")),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"reflectedType")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ObjectType\u2039\u203a ","|"," TupleType\u2039\u203a ","|"," ClassType\u2039\u203a ","|"," ReferenceType\u2039\u203a ","|"," UnionType\u2039\u203a ","|"," StringLiteralType\u2039\u203a ","|"," FunctionType\u2039\u203a ","|"," NumberLiteralType\u2039\u203a ","|"," BaseType\u2039String, string\u203a ","|"," BaseType\u2039Number, number\u203a ","|"," BaseType\u2039Boolean, boolean\u203a ","|"," BaseType\u2039Null, null\u203a ","|"," BaseType\u2039Undefined, undefined\u203a ","|"," BaseType\u2039ESSymbol, Symbol\u203a ","|"," BaseType\u2039Void, void\u203a ","|"," BaseType\u2039Never, never\u203a ","|"," BaseType\u2039Any, any\u203a ","|"," BaseType\u2039FalseLiteral, false\u203a ","|"," BaseType\u2039TrueLiteral, true\u203a ","|"," BaseType\u2039Unknown, unknown\u203a ","|"," BaseType\u2039Unknown2, unknown\u203a ","|"," ",Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/typend/docs/api/modules/types#class"}),"Class")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Reflected type.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"converter")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/typend/docs/api/interfaces/types.converter"}),"Converter")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Converter instance.")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," ",Object(c.b)("em",{parentName:"p"},Object(c.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/classes/class"}),"Class")," | any")),Object(c.b)("p",null,"Returns converted class properties as instance of ",Object(c.b)("inlineCode",{parentName:"p"},"Class")," pattern."),Object(c.b)("hr",null),Object(c.b)("h3",{id:"isconvertible"},"isConvertible"),Object(c.b)("p",null,"\u25b8 ",Object(c.b)("strong",{parentName:"p"},"isConvertible"),"(",Object(c.b)("inlineCode",{parentName:"p"},"reflectedTypeOrClass"),": tsrTypes.ReflectedType | any): ",Object(c.b)("em",{parentName:"p"},"boolean")),Object(c.b)("p",null,"Evaluates if provided reflected type or argument is a class."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Parameters:")),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"reflectedTypeOrClass")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"tsrTypes.ReflectedType ","|"," any"),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Reflected type or argument as a class.")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," ",Object(c.b)("em",{parentName:"p"},"boolean")),Object(c.b)("p",null,"Returns ",Object(c.b)("inlineCode",{parentName:"p"},"true")," if reflected type or argument is class type, else ",Object(c.b)("inlineCode",{parentName:"p"},"false"),"."),Object(c.b)("hr",null),Object(c.b)("h3",{id:"reflect"},"reflect"),Object(c.b)("p",null,"\u25b8 ",Object(c.b)("strong",{parentName:"p"},"reflect"),"(",Object(c.b)("inlineCode",{parentName:"p"},"reflectedType"),": ObjectType\u2039\u203a | TupleType\u2039\u203a | ClassType\u2039\u203a | ReferenceType\u2039\u203a | UnionType\u2039\u203a | StringLiteralType\u2039\u203a | FunctionType\u2039\u203a | NumberLiteralType\u2039\u203a | BaseType\u2039String, string\u203a | BaseType\u2039Number, number\u203a | BaseType\u2039Boolean, boolean\u203a | BaseType\u2039Null, null\u203a | BaseType\u2039Undefined, undefined\u203a | BaseType\u2039ESSymbol, Symbol\u203a | BaseType\u2039Void, void\u203a | BaseType\u2039Never, never\u203a | BaseType\u2039Any, any\u203a | BaseType\u2039FalseLiteral, false\u203a | BaseType\u2039TrueLiteral, true\u203a | BaseType\u2039Unknown, unknown\u203a | BaseType\u2039Unknown2, unknown\u203a | ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/typend/docs/api/modules/types#class"}),"Class"),", ",Object(c.b)("inlineCode",{parentName:"p"},"converter"),": ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"/typend/docs/api/interfaces/types.converter"}),"Converter"),"): ",Object(c.b)("em",{parentName:"p"},"Record\u2039keyof any, any\u203a")),Object(c.b)("p",null,"Reflect class properties and their matching expectations."),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Parameters:")),Object(c.b)("table",null,Object(c.b)("thead",{parentName:"table"},Object(c.b)("tr",{parentName:"thead"},Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(c.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(c.b)("tbody",{parentName:"table"},Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"reflectedType")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"ObjectType\u2039\u203a ","|"," TupleType\u2039\u203a ","|"," ClassType\u2039\u203a ","|"," ReferenceType\u2039\u203a ","|"," UnionType\u2039\u203a ","|"," StringLiteralType\u2039\u203a ","|"," FunctionType\u2039\u203a ","|"," NumberLiteralType\u2039\u203a ","|"," BaseType\u2039String, string\u203a ","|"," BaseType\u2039Number, number\u203a ","|"," BaseType\u2039Boolean, boolean\u203a ","|"," BaseType\u2039Null, null\u203a ","|"," BaseType\u2039Undefined, undefined\u203a ","|"," BaseType\u2039ESSymbol, Symbol\u203a ","|"," BaseType\u2039Void, void\u203a ","|"," BaseType\u2039Never, never\u203a ","|"," BaseType\u2039Any, any\u203a ","|"," BaseType\u2039FalseLiteral, false\u203a ","|"," BaseType\u2039TrueLiteral, true\u203a ","|"," BaseType\u2039Unknown, unknown\u203a ","|"," BaseType\u2039Unknown2, unknown\u203a ","|"," ",Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/typend/docs/api/modules/types#class"}),"Class")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Reflected type.")),Object(c.b)("tr",{parentName:"tbody"},Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("inlineCode",{parentName:"td"},"converter")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(c.b)("a",Object(n.a)({parentName:"td"},{href:"/typend/docs/api/interfaces/types.converter"}),"Converter")),Object(c.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Converter instance.")))),Object(c.b)("p",null,Object(c.b)("strong",{parentName:"p"},"Returns:")," ",Object(c.b)("em",{parentName:"p"},"Record\u2039keyof any, any\u203a")),Object(c.b)("p",null,"Returns reflected class properties as an ",Object(c.b)("inlineCode",{parentName:"p"},"Object"),"."))}o.isMDXComponent=!0},290:function(e,t,a){"use strict";a.d(t,"a",(function(){return i})),a.d(t,"b",(function(){return j}));var n=a(0),r=a.n(n);function c(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function b(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?b(Object(a),!0).forEach((function(t){c(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):b(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},c=Object.keys(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)a=c[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=r.a.createContext({}),o=function(e){var t=r.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},i=function(e){var t=o(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,c=e.originalType,b=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),i=o(a),O=n,j=i["".concat(b,".").concat(O)]||i[O]||d[O]||c;return a?r.a.createElement(j,l(l({ref:t},s),{},{components:a})):r.a.createElement(j,l({ref:t},s))}));function j(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=a.length,b=new Array(c);b[0]=O;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:n,b[1]=l;for(var s=2;s<c;s++)b[s]=a[s];return r.a.createElement.apply(null,b)}return r.a.createElement.apply(null,a)}O.displayName="MDXCreateElement"}}]);