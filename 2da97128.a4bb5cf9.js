(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{168:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return p})),r.d(t,"rightToc",(function(){return l})),r.d(t,"default",(function(){return o}));var n=r(2),a=r(9),b=(r(0),r(292)),c={id:"tsruntimeconverter",title:"TSRuntimeConverter",sidebar_label:"TSRuntimeConverter"},p={id:"api/classes/tsruntimeconverter",title:"TSRuntimeConverter",description:"Hierarchy",source:"@site/docs/api/classes/tsruntimeconverter.md",permalink:"/typend/docs/api/classes/tsruntimeconverter",sidebar_label:"TSRuntimeConverter",sidebar:"api",previous:{title:"ReferenceConverter",permalink:"/typend/docs/api/classes/referenceconverter"},next:{title:"Tuple",permalink:"/typend/docs/api/classes/tuple"}},l=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Implements",id:"implements",children:[]},{value:"Index",id:"index",children:[{value:"Constructors",id:"constructors",children:[]},{value:"Properties",id:"properties",children:[]},{value:"Methods",id:"methods",children:[]}]},{value:"Constructors",id:"constructors-1",children:[{value:"constructor",id:"constructor",children:[]}]},{value:"Properties",id:"properties-1",children:[{value:"typeConverters",id:"typeconverters",children:[]}]},{value:"Methods",id:"methods-1",children:[{value:"convert",id:"convert",children:[]},{value:"getConverter",id:"getconverter",children:[]},{value:"hasConverter",id:"hasconverter",children:[]},{value:"overrideConverter",id:"overrideconverter",children:[]},{value:"reflect",id:"reflect",children:[]},{value:"registerConverter",id:"registerconverter",children:[]},{value:"removeConverter",id:"removeconverter",children:[]}]}],i={rightToc:l};function o(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(b.b)("wrapper",Object(n.a)({},i,r,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"TSRuntimeConverter"))),Object(b.b)("h2",{id:"implements"},"Implements"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/interfaces/types.converter"}),"Converter")),Object(b.b)("li",{parentName:"ul"},"Converter")),Object(b.b)("h2",{id:"index"},"Index"),Object(b.b)("h3",{id:"constructors"},"Constructors"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/tsruntimeconverter#constructor"}),"constructor"))),Object(b.b)("h3",{id:"properties"},"Properties"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/tsruntimeconverter#typeconverters"}),"typeConverters"))),Object(b.b)("h3",{id:"methods"},"Methods"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/tsruntimeconverter#convert"}),"convert")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/tsruntimeconverter#getconverter"}),"getConverter")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/tsruntimeconverter#hasconverter"}),"hasConverter")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/tsruntimeconverter#overrideconverter"}),"overrideConverter")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/tsruntimeconverter#reflect"}),"reflect")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/tsruntimeconverter#registerconverter"}),"registerConverter")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/tsruntimeconverter#removeconverter"}),"removeConverter"))),Object(b.b)("h2",{id:"constructors-1"},"Constructors"),Object(b.b)("h3",{id:"constructor"},"constructor"),Object(b.b)("p",null,"+"," ",Object(b.b)("strong",{parentName:"p"},"new TSRuntimeConverter"),"(",Object(b.b)("inlineCode",{parentName:"p"},"typeConverters?"),": Map\u2039string, ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/typend/docs/api/interfaces/types.typeconverter"}),"TypeConverter"),"\u203a): ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/classes/tsruntimeconverter"}),"TSRuntimeConverter"))),Object(b.b)("p",null,"Creates an instance of TSRuntimeConverter.\nCreates an instance of TSRuntimeConverter."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"typeConverters?")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Map\u2039string, ",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/typend/docs/api/interfaces/types.typeconverter"}),"TypeConverter"),"\u203a"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Optional mappings of ",Object(b.b)("inlineCode",{parentName:"td"},"TypeConverter"),"(s) as a ",Object(b.b)("inlineCode",{parentName:"td"},"Map")," instance.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/classes/tsruntimeconverter"}),"TSRuntimeConverter"))),Object(b.b)("h2",{id:"properties-1"},"Properties"),Object(b.b)("h3",{id:"typeconverters"},"typeConverters"),Object(b.b)("p",null,"\u2022 ",Object(b.b)("strong",{parentName:"p"},"typeConverters"),": ",Object(b.b)("em",{parentName:"p"},"Map\u2039string, TypeConverter\u203a")),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Implementation of ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.converter"}),"Converter"),".",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.converter#typeconverters"}),"typeConverters"))),Object(b.b)("h2",{id:"methods-1"},"Methods"),Object(b.b)("h3",{id:"convert"},"convert"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"convert"),"(",Object(b.b)("inlineCode",{parentName:"p"},"reflectedType"),": tsruntimeTypes.ReflectedType): ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/modules/types#type"}),"Type"))),Object(b.b)("p",null,"Converts reflected by ",Object(b.b)("inlineCode",{parentName:"p"},"tsruntime")," Typescript's type declaration to native\ntype or ",Object(b.b)("inlineCode",{parentName:"p"},"Pattern")," instance for easy runtime-validation.\n","[!]"," Prior to conversion:\nClasses  must have ",Object(b.b)("inlineCode",{parentName:"p"},"@define")," decorator applied."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"link"))," ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/goloveychuk/tsruntime%7Ctsruntime"}),"https://github.com/goloveychuk/tsruntime|tsruntime")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"reflectedType")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"tsruntimeTypes.ReflectedType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Reflected type that will be converted.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/modules/types#type"}),"Type"))),Object(b.b)("p",null,"Converted type as native type or ",Object(b.b)("inlineCode",{parentName:"p"},"Pattern")," instance."),Object(b.b)("hr",null),Object(b.b)("h3",{id:"getconverter"},"getConverter"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"getConverter"),"(",Object(b.b)("inlineCode",{parentName:"p"},"type"),": string): ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.typeconverter"}),"TypeConverter")," | undefined")),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Implementation of ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.converter"}),"Converter"))),Object(b.b)("p",null,"Returns type converter."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"type")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.typeconverter"}),"TypeConverter")," | undefined")),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"TypeConverter")," instance if found, else ",Object(b.b)("inlineCode",{parentName:"p"},"undefined"),"."),Object(b.b)("hr",null),Object(b.b)("h3",{id:"hasconverter"},"hasConverter"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"hasConverter"),"(",Object(b.b)("inlineCode",{parentName:"p"},"type"),": string): ",Object(b.b)("em",{parentName:"p"},"boolean")),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Implementation of ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.converter"}),"Converter"))),Object(b.b)("p",null,"Evaluates if converter for type is already registered by mapping id."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"type")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},"boolean")),Object(b.b)("p",null,"Returns ",Object(b.b)("inlineCode",{parentName:"p"},"true")," if type is registered, else ",Object(b.b)("inlineCode",{parentName:"p"},"false"),"."),Object(b.b)("hr",null),Object(b.b)("h3",{id:"overrideconverter"},"overrideConverter"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"overrideConverter"),"(",Object(b.b)("inlineCode",{parentName:"p"},"kind"),": string, ",Object(b.b)("inlineCode",{parentName:"p"},"converter"),": ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/typend/docs/api/interfaces/types.typeconverter"}),"TypeConverter"),"): ",Object(b.b)("em",{parentName:"p"},"void")),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Implementation of ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.converter"}),"Converter"))),Object(b.b)("p",null,"Overrides already existing type converter by kind mapping on converter."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"kind")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Kind for which type converter mapping is registered or overridden.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"converter")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/typend/docs/api/interfaces/types.typeconverter"}),"TypeConverter")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"TypeConverter")," instance for registration.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},"void")),Object(b.b)("hr",null),Object(b.b)("h3",{id:"reflect"},"reflect"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"reflect"),"(",Object(b.b)("inlineCode",{parentName:"p"},"reflectedType"),": tsruntimeTypes.ReflectedType): ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/modules/types#type"}),"Type"))),Object(b.b)("p",null,"Reflects with ",Object(b.b)("inlineCode",{parentName:"p"},"tsruntime")," Typescript's type declaration to native type\nor ",Object(b.b)("inlineCode",{parentName:"p"},"Pattern")," instance(when native type representation is unavailable) for easier processing.\n","[!]"," Prior to reflection:\nClasses  must have ",Object(b.b)("inlineCode",{parentName:"p"},"@define")," decorator applied."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"link"))," ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/goloveychuk/tsruntime%7Ctsruntime"}),"https://github.com/goloveychuk/tsruntime|tsruntime")),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"reflectedType")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"tsruntimeTypes.ReflectedType"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Reflected type that will be reflected.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/modules/types#type"}),"Type"))),Object(b.b)("p",null,"Reflected type as native type or ",Object(b.b)("inlineCode",{parentName:"p"},"Pattern")," instance."),Object(b.b)("hr",null),Object(b.b)("h3",{id:"registerconverter"},"registerConverter"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"registerConverter"),"(",Object(b.b)("inlineCode",{parentName:"p"},"kind"),": string, ",Object(b.b)("inlineCode",{parentName:"p"},"typeConverter"),": ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/typend/docs/api/interfaces/types.typeconverter"}),"TypeConverter"),", ",Object(b.b)("inlineCode",{parentName:"p"},"shouldOverride?"),": boolean): ",Object(b.b)("em",{parentName:"p"},"void")),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Implementation of ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.converter"}),"Converter"))),Object(b.b)("p",null,"Registers type converter on converter."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"throws"))," {TypeConverterExists}\nThrown if mapping would overridden on existing type converter without explicit call."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"kind")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Kind for which type converter mapping is registered.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"typeConverter")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/typend/docs/api/interfaces/types.typeconverter"}),"TypeConverter")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"TypeConverter")," instance for registration.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"shouldOverride?")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Optional flag indicating that type mapping should be overridden if exist.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},"void")),Object(b.b)("hr",null),Object(b.b)("h3",{id:"removeconverter"},"removeConverter"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"removeConverter"),"(",Object(b.b)("inlineCode",{parentName:"p"},"type"),": string): ",Object(b.b)("em",{parentName:"p"},"void")),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Implementation of ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.converter"}),"Converter"))),Object(b.b)("p",null,"Removes converter by mapping type."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"type")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},"void")))}o.isMDXComponent=!0},292:function(e,t,r){"use strict";r.d(t,"a",(function(){return O})),r.d(t,"b",(function(){return s}));var n=r(0),a=r.n(n);function b(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){b(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},b=Object.keys(e);for(n=0;n<b.length;n++)r=b[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(n=0;n<b.length;n++)r=b[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=a.a.createContext({}),o=function(e){var t=a.a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},O=function(e){var t=o(e.components);return a.a.createElement(i.Provider,{value:t},e.children)},j={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,b=e.originalType,c=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),O=o(r),m=n,s=O["".concat(c,".").concat(m)]||O[m]||j[m]||b;return r?a.a.createElement(s,p(p({ref:t},i),{},{components:r})):a.a.createElement(s,p({ref:t},i))}));function s(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var b=r.length,c=new Array(b);c[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:n,c[1]=p;for(var i=2;i<b;i++)c[i]=r[i];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"}}]);