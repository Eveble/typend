(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{184:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return l})),a.d(t,"metadata",(function(){return i})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return d}));var n=a(2),r=a(9),b=(a(0),a(292)),l={id:"validator",title:"Validator",sidebar_label:"Validator"},i={id:"api/classes/validator",title:"Validator",description:"Hierarchy",source:"@site/docs/api/classes/validator.md",permalink:"/typend/docs/api/classes/validator",sidebar_label:"Validator",sidebar:"api",previous:{title:"ValidationError",permalink:"/typend/docs/api/classes/validationerror"},next:{title:"Void",permalink:"/typend/docs/api/classes/void"}},c=[{value:"Hierarchy",id:"hierarchy",children:[]},{value:"Implements",id:"implements",children:[]},{value:"Index",id:"index",children:[{value:"Constructors",id:"constructors",children:[]},{value:"Methods",id:"methods",children:[]}]},{value:"Constructors",id:"constructors-1",children:[{value:"constructor",id:"constructor",children:[]}]},{value:"Methods",id:"methods-1",children:[{value:"getAllValidators",id:"getallvalidators",children:[]},{value:"getOrder",id:"getorder",children:[]},{value:"getValidator",id:"getvalidator",children:[]},{value:"getValidatorOrThrow",id:"getvalidatororthrow",children:[]},{value:"getValidators",id:"getvalidators",children:[]},{value:"hasValidator",id:"hasvalidator",children:[]},{value:"isInstanceOf",id:"isinstanceof",children:[]},{value:"isValid",id:"isvalid",children:[]},{value:"overrideValidator",id:"overridevalidator",children:[]},{value:"registerValidator",id:"registervalidator",children:[]},{value:"removeValidator",id:"removevalidator",children:[]},{value:"setOrder",id:"setorder",children:[]},{value:"setValidators",id:"setvalidators",children:[]},{value:"validate",id:"validate",children:[]}]}],p={rightToc:c};function d(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h2",{id:"hierarchy"},"Hierarchy"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("strong",{parentName:"li"},"Validator"))),Object(b.b)("h2",{id:"implements"},"Implements"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/interfaces/types.validator"}),"Validator")),Object(b.b)("li",{parentName:"ul"},"Validator")),Object(b.b)("h2",{id:"index"},"Index"),Object(b.b)("h3",{id:"constructors"},"Constructors"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/validator#constructor"}),"constructor"))),Object(b.b)("h3",{id:"methods"},"Methods"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/validator#getallvalidators"}),"getAllValidators")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/validator#getorder"}),"getOrder")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/validator#getvalidator"}),"getValidator")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/validator#getvalidatororthrow"}),"getValidatorOrThrow")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/validator#getvalidators"}),"getValidators")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/validator#hasvalidator"}),"hasValidator")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/validator#isinstanceof"}),"isInstanceOf")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/validator#isvalid"}),"isValid")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/validator#overridevalidator"}),"overrideValidator")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/validator#registervalidator"}),"registerValidator")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/validator#removevalidator"}),"removeValidator")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/validator#setorder"}),"setOrder")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/validator#setvalidators"}),"setValidators")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/typend/docs/api/classes/validator#validate"}),"validate"))),Object(b.b)("h2",{id:"constructors-1"},"Constructors"),Object(b.b)("h3",{id:"constructor"},"constructor"),Object(b.b)("p",null,"+"," ",Object(b.b)("strong",{parentName:"p"},"new Validator"),"(",Object(b.b)("inlineCode",{parentName:"p"},"validators?"),": Map\u2039string, ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/typend/docs/api/interfaces/types.patternvalidator"}),"PatternValidator"),"\u203a): ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/classes/validator"}),"Validator"))),Object(b.b)("p",null,"Creates an instance of Validator.\nCreates an instance of Validator."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"validators?")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Map\u2039string, ",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/typend/docs/api/interfaces/types.patternvalidator"}),"PatternValidator"),"\u203a"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Optional mappings of ",Object(b.b)("inlineCode",{parentName:"td"},"PatternValidator"),"(s) as a ",Object(b.b)("inlineCode",{parentName:"td"},"Map")," instance.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/classes/validator"}),"Validator"))),Object(b.b)("h2",{id:"methods-1"},"Methods"),Object(b.b)("h3",{id:"getallvalidators"},"getAllValidators"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"getAllValidators"),"(): ",Object(b.b)("em",{parentName:"p"},"Map\u2039string, ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.patternvalidator"}),"PatternValidator"),"\u203a")),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Implementation of ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.validator"}),"Validator"))),Object(b.b)("p",null,"Returns all registered validators."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},"Map\u2039string, ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.patternvalidator"}),"PatternValidator"),"\u203a")),Object(b.b)("p",null,"Instance of a ",Object(b.b)("inlineCode",{parentName:"p"},"Map")," of all registered validators implementing ",Object(b.b)("inlineCode",{parentName:"p"},"PatternValidator"),"."),Object(b.b)("hr",null),Object(b.b)("h3",{id:"getorder"},"getOrder"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"getOrder"),"(): ",Object(b.b)("em",{parentName:"p"},"string[]")),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Implementation of ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.validator"}),"Validator"))),Object(b.b)("p",null,"Returns validators order."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},"string[]")),Object(b.b)("p",null,"List with registered validator id's in sorted order."),Object(b.b)("hr",null),Object(b.b)("h3",{id:"getvalidator"},"getValidator"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"getValidator"),"(",Object(b.b)("inlineCode",{parentName:"p"},"kind"),": string): ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.patternvalidator"}),"PatternValidator")," | undefined")),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Implementation of ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.validator"}),"Validator"))),Object(b.b)("p",null,"Returns validator by mapping."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"kind")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Identifier for which type, ",Object(b.b)("inlineCode",{parentName:"td"},"PatternValidator")," instance is mapped.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.patternvalidator"}),"PatternValidator")," | undefined")),Object(b.b)("p",null,"Registered validator instance, else undefined."),Object(b.b)("hr",null),Object(b.b)("h3",{id:"getvalidatororthrow"},"getValidatorOrThrow"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"getValidatorOrThrow"),"(",Object(b.b)("inlineCode",{parentName:"p"},"kind"),": string): ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.patternvalidator"}),"PatternValidator"))),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Implementation of ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.validator"}),"Validator"))),Object(b.b)("p",null,"Returns validator by mapping or throws."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"throws"))," {PatternValidatorNotFoundError}\nThrown if pattern validator for kind does not existing on validator."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"kind")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Identifier for which type, ",Object(b.b)("inlineCode",{parentName:"td"},"PatternValidator")," instance is mapped.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.patternvalidator"}),"PatternValidator"))),Object(b.b)("p",null,"Registered validator instance, else throws."),Object(b.b)("hr",null),Object(b.b)("h3",{id:"getvalidators"},"getValidators"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"getValidators"),"(): ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.patternvalidator"}),"PatternValidator"),"[]")),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Implementation of ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.validator"}),"Validator"))),Object(b.b)("p",null,"Returns ordered validators."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.patternvalidator"}),"PatternValidator"),"[]")),Object(b.b)("p",null,"Ordered(if order is provided) list of validators."),Object(b.b)("hr",null),Object(b.b)("h3",{id:"hasvalidator"},"hasValidator"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"hasValidator"),"(",Object(b.b)("inlineCode",{parentName:"p"},"kind"),": string): ",Object(b.b)("em",{parentName:"p"},"boolean")),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Implementation of ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.validator"}),"Validator"))),Object(b.b)("p",null,"Evaluates if validator is already registered by mapping id."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"kind")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Identifier for which type, ",Object(b.b)("inlineCode",{parentName:"td"},"PatternValidator")," instance is mapped.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},"boolean")),Object(b.b)("p",null,"Returns true if validator is registered, else false."),Object(b.b)("hr",null),Object(b.b)("h3",{id:"isinstanceof"},"isInstanceOf"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"isInstanceOf"),"(",Object(b.b)("inlineCode",{parentName:"p"},"value"),": any, ",Object(b.b)("inlineCode",{parentName:"p"},"expectation"),": ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/typend/docs/api/modules/types#expectation"}),"Expectation"),"): ",Object(b.b)("em",{parentName:"p"},"boolean")),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Implementation of ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.validator"}),"Validator"))),Object(b.b)("p",null,"Validates if a value is instance of expectation."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"value")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"any"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Value that needs to validated.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"expectation")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/typend/docs/api/modules/types#expectation"}),"Expectation")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Expectation as explicit ",Object(b.b)("inlineCode",{parentName:"td"},"Class"),", ",Object(b.b)("inlineCode",{parentName:"td"},"InstanceOf"),", ",Object(b.b)("inlineCode",{parentName:"td"},"Interface")," pattern instance against which value will be validated.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},"boolean")),Object(b.b)("p",null,"Returns ",Object(b.b)("inlineCode",{parentName:"p"},"true")," if validation is successful, else ",Object(b.b)("inlineCode",{parentName:"p"},"false"),"."),Object(b.b)("hr",null),Object(b.b)("h3",{id:"isvalid"},"isValid"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"isValid"),"(",Object(b.b)("inlineCode",{parentName:"p"},"value"),": any, ",Object(b.b)("inlineCode",{parentName:"p"},"expectation"),": ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/typend/docs/api/modules/types#expectation"}),"Expectation"),", ",Object(b.b)("inlineCode",{parentName:"p"},"isStrict?"),": boolean): ",Object(b.b)("em",{parentName:"p"},"boolean")),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Implementation of ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.validator"}),"Validator"))),Object(b.b)("p",null,"Validates if a value matches an expectation."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"value")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"any"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Value that needs to validated.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"expectation")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/typend/docs/api/modules/types#expectation"}),"Expectation")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Explicit ",Object(b.b)("inlineCode",{parentName:"td"},"Pattern")," instance, instance of ",Object(b.b)("inlineCode",{parentName:"td"},"Utility")," or implicit expectation against which value will be validated.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"isStrict?")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Optional flag indicating that evaluation should be done in strict mode.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},"boolean")),Object(b.b)("p",null,"Returns ",Object(b.b)("inlineCode",{parentName:"p"},"true")," if validation is successful, else ",Object(b.b)("inlineCode",{parentName:"p"},"false"),"."),Object(b.b)("hr",null),Object(b.b)("h3",{id:"overridevalidator"},"overrideValidator"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"overrideValidator"),"(",Object(b.b)("inlineCode",{parentName:"p"},"kind"),": string, ",Object(b.b)("inlineCode",{parentName:"p"},"validator"),": ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/typend/docs/api/interfaces/types.patternvalidator"}),"PatternValidator"),"): ",Object(b.b)("em",{parentName:"p"},"void")),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Implementation of ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.validator"}),"Validator"))),Object(b.b)("p",null,"Overrides already existing validator by mapping on delegator."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"kind")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Identifier for which type, ",Object(b.b)("inlineCode",{parentName:"td"},"PatternValidator")," instance is mapped.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"validator")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/typend/docs/api/interfaces/types.patternvalidator"}),"PatternValidator")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Validator for registration.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},"void")),Object(b.b)("hr",null),Object(b.b)("h3",{id:"registervalidator"},"registerValidator"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"registerValidator"),"(",Object(b.b)("inlineCode",{parentName:"p"},"kind"),": string, ",Object(b.b)("inlineCode",{parentName:"p"},"validator"),": ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/typend/docs/api/interfaces/types.patternvalidator"}),"PatternValidator"),", ",Object(b.b)("inlineCode",{parentName:"p"},"shouldOverride?"),": boolean): ",Object(b.b)("em",{parentName:"p"},"void")),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Implementation of ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.validator"}),"Validator"))),Object(b.b)("p",null,"Registers validator on delegator."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"throws"))," {PatternValidatorExistError}\nThrown if mapping would overridden on delegator without explicit call."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"kind")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Id for which mapping will be created.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"validator")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/typend/docs/api/interfaces/types.patternvalidator"}),"PatternValidator")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Validator for registration.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"shouldOverride?")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Optional flag indicating that mapping should be overridden if exist.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},"void")),Object(b.b)("hr",null),Object(b.b)("h3",{id:"removevalidator"},"removeValidator"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"removeValidator"),"(",Object(b.b)("inlineCode",{parentName:"p"},"kind"),": string): ",Object(b.b)("em",{parentName:"p"},"void")),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Implementation of ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.validator"}),"Validator"))),Object(b.b)("p",null,"Removes validator by mapping id."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"kind")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Identifier for which type, ",Object(b.b)("inlineCode",{parentName:"td"},"PatternValidator")," instance is mapped.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},"void")),Object(b.b)("hr",null),Object(b.b)("h3",{id:"setorder"},"setOrder"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"setOrder"),"(",Object(b.b)("inlineCode",{parentName:"p"},"order"),": string[]): ",Object(b.b)("em",{parentName:"p"},"void")),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Implementation of ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.validator"}),"Validator"))),Object(b.b)("p",null,"Set validators order by list with sorted ids."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"order")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"string[]"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"List with registered validator id's in sorted order.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},"void")),Object(b.b)("hr",null),Object(b.b)("h3",{id:"setvalidators"},"setValidators"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"setValidators"),"(",Object(b.b)("inlineCode",{parentName:"p"},"validators"),": Map\u2039string, ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/typend/docs/api/interfaces/types.patternvalidator"}),"PatternValidator"),"\u203a): ",Object(b.b)("em",{parentName:"p"},"void")),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Implementation of ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.validator"}),"Validator"))),Object(b.b)("p",null,"Sets map of validators."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"validators")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Map\u2039string, ",Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/typend/docs/api/interfaces/types.patternvalidator"}),"PatternValidator"),"\u203a"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"Map")," instance with of validators implementing ",Object(b.b)("inlineCode",{parentName:"td"},"PatternValidator"),".")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},"void")),Object(b.b)("hr",null),Object(b.b)("h3",{id:"validate"},"validate"),Object(b.b)("p",null,"\u25b8 ",Object(b.b)("strong",{parentName:"p"},"validate"),"(",Object(b.b)("inlineCode",{parentName:"p"},"value"),": any, ",Object(b.b)("inlineCode",{parentName:"p"},"expectation"),": ",Object(b.b)("a",Object(n.a)({parentName:"p"},{href:"/typend/docs/api/modules/types#expectation"}),"Expectation"),", ",Object(b.b)("inlineCode",{parentName:"p"},"isStrict?"),": boolean): ",Object(b.b)("em",{parentName:"p"},"boolean")),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Implementation of ",Object(b.b)("a",Object(n.a)({parentName:"em"},{href:"/typend/docs/api/interfaces/types.validator"}),"Validator"))),Object(b.b)("p",null,"Validates if a value matches an expectation or throws."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"remarks")),"\nCurrent implementation uses isStrict to differentiate strict validator from the loose one\n(Collection vs CollectionIncluding) to evaluate if implicit expectation of pattern\nshould use deep strict comparison pattern ",Object(b.b)("inlineCode",{parentName:"p"},"Collection")," or allow arbitrary(loose) values by\nusing ",Object(b.b)("inlineCode",{parentName:"p"},"CollectionIncluding")," for objects.\nHowever, developers can create their own pattern that could use isStrict flag on\nvalidation level(simplest example: different implementation of EqualsValidator\nthat could behave more like == in js)."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"throws"))," {ValidationError}\nThrown if the value does not match provided pattern."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},Object(b.b)("inlineCode",{parentName:"strong"},"throws"))," {UnknownError}\nThrown if the value can't be validated by any of registered validators."),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Parameters:")),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"value")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"any"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Value that needs to validated.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"expectation")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/typend/docs/api/modules/types#expectation"}),"Expectation")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Explicit ",Object(b.b)("inlineCode",{parentName:"td"},"Pattern")," instance, instance of ",Object(b.b)("inlineCode",{parentName:"td"},"Utility")," or implicit expectation against which value will be validated.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(b.b)("inlineCode",{parentName:"td"},"isStrict?")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"boolean"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Flag indicating that evaluation should be done in strict mode.")))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Returns:")," ",Object(b.b)("em",{parentName:"p"},"boolean")),Object(b.b)("p",null,"Returns ",Object(b.b)("inlineCode",{parentName:"p"},"true")," if validation is successful, else throws."))}d.isMDXComponent=!0},292:function(e,t,a){"use strict";a.d(t,"a",(function(){return o})),a.d(t,"b",(function(){return s}));var n=a(0),r=a.n(n);function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},b=Object.keys(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=r.a.createContext({}),d=function(e){var t=r.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},o=function(e){var t=d(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},O={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},j=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,b=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),o=d(a),j=n,s=o["".concat(l,".").concat(j)]||o[j]||O[j]||b;return a?r.a.createElement(s,i(i({ref:t},p),{},{components:a})):r.a.createElement(s,i({ref:t},p))}));function s(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var b=a.length,l=new Array(b);l[0]=j;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var p=2;p<b;p++)l[p]=a[p];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}j.displayName="MDXCreateElement"}}]);